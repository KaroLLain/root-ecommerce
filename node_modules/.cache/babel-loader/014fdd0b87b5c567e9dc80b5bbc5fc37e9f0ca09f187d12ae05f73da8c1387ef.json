{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { thunk } from \"redux-thunk\";\nimport { productListReducer } from './reducers/productReducers';\nconst reducer = combineReducers({\n  productList: productListReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer: reducer,\n  preloadedState: initialState,\n  middleware: getDefaultMiddleware => getDefaultMiddleware(...middleware)\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","thunk","productListReducer","reducer","productList","initialState","middleware","store","preloadedState","getDefaultMiddleware"],"sources":["D:/Pulpit/root-ecommerce/frontend/src/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit'\r\nimport { thunk } from \"redux-thunk\";\r\nimport { productListReducer } from './reducers/productReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = configureStore({\r\n    reducer: reducer,\r\n    preloadedState: initialState,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware(...middleware),\r\n});\r\n \r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,kBAAkB,QAAQ,4BAA4B;AAE/D,MAAMC,OAAO,GAAGH,eAAe,CAAC;EAC5BI,WAAW,EAAEF;AACjB,CAAC,CAAC;AAEF,MAAMG,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,UAAU,GAAG,CAACL,KAAK,CAAC;AAE1B,MAAMM,KAAK,GAAGR,cAAc,CAAC;EACzBI,OAAO,EAAEA,OAAO;EAChBK,cAAc,EAAEH,YAAY;EAC5BC,UAAU,EAAGG,oBAAoB,IAAKA,oBAAoB,CAAC,GAAGH,UAAU;AAC5E,CAAC,CAAC;AAGF,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}